{"ast":null,"code":"var _jsxFileName = \"/home/keita/alx-react/0x04-React_inline_styling/task_0/dashboards/src/Notifications/Notifications.js\";\nimport React from 'react';\nimport './Notifications.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Notifications extends React.Component {\n  // Implement shouldComponentUpdate to optimize performance\n  shouldComponentUpdate(nextProps) {\n    // Only re-render if the length of the listNotifications has increased\n    if (nextProps.listNotifications.length > this.props.listNotifications.length) {\n      return true; // Allow re-render\n    }\n    return false; // Prevent re-render\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Notifications\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.props.listNotifications.map((notification, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: notification\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Notifications;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Notifications","Component","shouldComponentUpdate","nextProps","listNotifications","length","props","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","notification","index"],"sources":["/home/keita/alx-react/0x04-React_inline_styling/task_0/dashboards/src/Notifications/Notifications.js"],"sourcesContent":["import React from 'react';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n  // Implement shouldComponentUpdate to optimize performance\n  shouldComponentUpdate(nextProps) {\n    // Only re-render if the length of the listNotifications has increased\n    if (nextProps.listNotifications.length > this.props.listNotifications.length) {\n      return true; // Allow re-render\n    }\n    return false; // Prevent re-render\n  }\n\n  render() {\n    return (\n      <div className=\"Notifications\">\n        <h1>Note</h1>\n        {/* You can map over the notifications here */}\n        <ul>\n          {this.props.listNotifications.map((notification, index) => (\n            <li key={index}>{notification}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Notifications;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,SAASH,KAAK,CAACI,SAAS,CAAC;EAC1C;EACAC,qBAAqBA,CAACC,SAAS,EAAE;IAC/B;IACA,IAAIA,SAAS,CAACC,iBAAiB,CAACC,MAAM,GAAG,IAAI,CAACC,KAAK,CAACF,iBAAiB,CAACC,MAAM,EAAE;MAC5E,OAAO,IAAI,CAAC,CAAC;IACf;IACA,OAAO,KAAK,CAAC,CAAC;EAChB;EAEAE,MAAMA,CAAA,EAAG;IACP,oBACER,OAAA;MAAKS,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BV,OAAA;QAAAU,QAAA,EAAI;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEbd,OAAA;QAAAU,QAAA,EACG,IAAI,CAACH,KAAK,CAACF,iBAAiB,CAACU,GAAG,CAAC,CAACC,YAAY,EAAEC,KAAK,kBACpDjB,OAAA;UAAAU,QAAA,EAAiBM;QAAY,GAApBC,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoB,CACnC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEV;AACF;AAEA,eAAeb,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}