{"ast":null,"code":"var _jsxFileName = \"/home/keita/alx-react/0x04-React_inline_styling/task_0/dashboards/src/CourseList/CourseListRow.js\";\n// src/CourseList/CourseListRow.js\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, css } from 'aphrodite';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CourseListRow = ({\n  isHeader,\n  textFirstCell,\n  textSecondCell = null\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: isHeader ? textSecondCell ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: [textFirstCell, \" \", css(styles.red)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: textSecondCell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"th\", {\n      colSpan: 2,\n      children: textFirstCell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: textFirstCell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: textSecondCell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = CourseListRow;\nCourseListRow.propTypes = {\n  isHeader: PropTypes.bool,\n  textFirstCell: PropTypes.string.isRequired,\n  textSecondCell: PropTypes.string\n};\nCourseListRow.defaultProps = {\n  isHeader: false\n};\nconst styles = StyleSheet.create({\n  red: {\n    backgroundColor: '#f5f5f5ab'\n  }\n});\nexport default CourseListRow;\nvar _c;\n$RefreshReg$(_c, \"CourseListRow\");","map":{"version":3,"names":["React","PropTypes","StyleSheet","css","jsxDEV","_jsxDEV","Fragment","_Fragment","CourseListRow","isHeader","textFirstCell","textSecondCell","children","styles","red","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","_c","propTypes","bool","string","isRequired","defaultProps","create","backgroundColor","$RefreshReg$"],"sources":["/home/keita/alx-react/0x04-React_inline_styling/task_0/dashboards/src/CourseList/CourseListRow.js"],"sourcesContent":["// src/CourseList/CourseListRow.js\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, css } from 'aphrodite'\n\nconst CourseListRow = ({ isHeader, textFirstCell, textSecondCell = null }) => {\n\n\n    return (\n        <tr>\n            {isHeader ? (\n                textSecondCell ? (\n                    <>\n                        <th>{textFirstCell} {css(styles.red)}</th>\n                        <th>{textSecondCell}</th>\n                    </>\n                ) : (\n                    <th colSpan={2}>{textFirstCell}</th>\n                )\n            ) : (\n                <>\n                    <td>{textFirstCell}</td>\n                    <td>{textSecondCell}</td>\n                </>\n            )}\n        </tr>\n    );\n};\n\nCourseListRow.propTypes = {\n    isHeader: PropTypes.bool,\n    textFirstCell: PropTypes.string.isRequired,\n    textSecondCell: PropTypes.string,\n};\n\nCourseListRow.defaultProps = {\n    isHeader: false,\n};\nconst styles = StyleSheet.create({\n    red: {\n        backgroundColor: '#f5f5f5ab'\n    },\n\n\n});\nexport default CourseListRow;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,UAAU,EAAEC,GAAG,QAAQ,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3C,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,aAAa;EAAEC,cAAc,GAAG;AAAK,CAAC,KAAK;EAG1E,oBACIN,OAAA;IAAAO,QAAA,EACKH,QAAQ,GACLE,cAAc,gBACVN,OAAA,CAAAE,SAAA;MAAAK,QAAA,gBACIP,OAAA;QAAAO,QAAA,GAAKF,aAAa,EAAC,GAAC,EAACP,GAAG,CAACU,MAAM,CAACC,GAAG,CAAC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1Cb,OAAA;QAAAO,QAAA,EAAKD;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,eAC3B,CAAC,gBAEHb,OAAA;MAAIc,OAAO,EAAE,CAAE;MAAAP,QAAA,EAAEF;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACtC,gBAEDb,OAAA,CAAAE,SAAA;MAAAK,QAAA,gBACIP,OAAA;QAAAO,QAAA,EAAKF;MAAa;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBb,OAAA;QAAAO,QAAA,EAAKD;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,eAC3B;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEb,CAAC;AAACE,EAAA,GAtBIZ,aAAa;AAwBnBA,aAAa,CAACa,SAAS,GAAG;EACtBZ,QAAQ,EAAER,SAAS,CAACqB,IAAI;EACxBZ,aAAa,EAAET,SAAS,CAACsB,MAAM,CAACC,UAAU;EAC1Cb,cAAc,EAAEV,SAAS,CAACsB;AAC9B,CAAC;AAEDf,aAAa,CAACiB,YAAY,GAAG;EACzBhB,QAAQ,EAAE;AACd,CAAC;AACD,MAAMI,MAAM,GAAGX,UAAU,CAACwB,MAAM,CAAC;EAC7BZ,GAAG,EAAE;IACDa,eAAe,EAAE;EACrB;AAGJ,CAAC,CAAC;AACF,eAAenB,aAAa;AAAC,IAAAY,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}