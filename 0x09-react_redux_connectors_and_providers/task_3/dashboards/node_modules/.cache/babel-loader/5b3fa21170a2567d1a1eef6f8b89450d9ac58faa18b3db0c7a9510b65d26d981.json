{"ast":null,"code":"var _jsxFileName = \"/home/keita/alx-react/0x04-React_inline_styling/task_0/dashboards/src/CourseList/CourseListRow.js\";\n// src/CourseList/CourseListRow.js\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, css } from 'aphrodite';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CourseListRow = ({\n  isHeader,\n  textFirstCell,\n  textSecondCell = null\n}) => {\n  const styles = StyleSheet.create({\n    red: {\n      backgroundColor: 'red'\n    },\n    blue: {\n      backgroundColor: 'blue'\n    },\n    hover: {\n      ':hover': {\n        backgroundColor: 'red'\n      }\n    },\n    small: {\n      '@media (max-width: 600px)': {\n        backgroundColor: 'red'\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: isHeader ? textSecondCell ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: textFirstCell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: textSecondCell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"th\", {\n      colSpan: 2,\n      children: textFirstCell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: textFirstCell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: textSecondCell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_c = CourseListRow;\nCourseListRow.propTypes = {\n  isHeader: PropTypes.bool,\n  textFirstCell: PropTypes.string.isRequired,\n  textSecondCell: PropTypes.string\n};\nCourseListRow.defaultProps = {\n  isHeader: false\n};\nexport default CourseListRow;\nvar _c;\n$RefreshReg$(_c, \"CourseListRow\");","map":{"version":3,"names":["React","PropTypes","StyleSheet","css","jsxDEV","_jsxDEV","Fragment","_Fragment","CourseListRow","isHeader","textFirstCell","textSecondCell","styles","create","red","backgroundColor","blue","hover","small","children","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","_c","propTypes","bool","string","isRequired","defaultProps","$RefreshReg$"],"sources":["/home/keita/alx-react/0x04-React_inline_styling/task_0/dashboards/src/CourseList/CourseListRow.js"],"sourcesContent":["// src/CourseList/CourseListRow.js\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, css } from 'aphrodite'\n\nconst CourseListRow = ({ isHeader, textFirstCell, textSecondCell = null }) => {\n\n    const styles = StyleSheet.create({\n        red: {\n            backgroundColor: 'red'\n        },\n\n        blue: {\n            backgroundColor: 'blue'\n        },\n\n        hover: {\n            ':hover': {\n                backgroundColor: 'red'\n            }\n        },\n\n        small: {\n            '@media (max-width: 600px)': {\n                backgroundColor: 'red',\n            }\n        }\n    });\n    return (\n        <tr>\n            {isHeader ? (\n                textSecondCell ? (\n                    <>\n                        <th>{textFirstCell}</th>\n                        <th>{textSecondCell}</th>\n                    </>\n                ) : (\n                    <th colSpan={2}>{textFirstCell}</th>\n                )\n            ) : (\n                <>\n                    <td>{textFirstCell}</td>\n                    <td>{textSecondCell}</td>\n                </>\n            )}\n        </tr>\n    );\n};\n\nCourseListRow.propTypes = {\n    isHeader: PropTypes.bool,\n    textFirstCell: PropTypes.string.isRequired,\n    textSecondCell: PropTypes.string,\n};\n\nCourseListRow.defaultProps = {\n    isHeader: false,\n};\n\nexport default CourseListRow;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,UAAU,EAAEC,GAAG,QAAQ,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3C,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,aAAa;EAAEC,cAAc,GAAG;AAAK,CAAC,KAAK;EAE1E,MAAMC,MAAM,GAAGV,UAAU,CAACW,MAAM,CAAC;IAC7BC,GAAG,EAAE;MACDC,eAAe,EAAE;IACrB,CAAC;IAEDC,IAAI,EAAE;MACFD,eAAe,EAAE;IACrB,CAAC;IAEDE,KAAK,EAAE;MACH,QAAQ,EAAE;QACNF,eAAe,EAAE;MACrB;IACJ,CAAC;IAEDG,KAAK,EAAE;MACH,2BAA2B,EAAE;QACzBH,eAAe,EAAE;MACrB;IACJ;EACJ,CAAC,CAAC;EACF,oBACIV,OAAA;IAAAc,QAAA,EACKV,QAAQ,GACLE,cAAc,gBACVN,OAAA,CAAAE,SAAA;MAAAY,QAAA,gBACId,OAAA;QAAAc,QAAA,EAAKT;MAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBlB,OAAA;QAAAc,QAAA,EAAKR;MAAc;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,eAC3B,CAAC,gBAEHlB,OAAA;MAAImB,OAAO,EAAE,CAAE;MAAAL,QAAA,EAAET;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACtC,gBAEDlB,OAAA,CAAAE,SAAA;MAAAY,QAAA,gBACId,OAAA;QAAAc,QAAA,EAAKT;MAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBlB,OAAA;QAAAc,QAAA,EAAKR;MAAc;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,eAC3B;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEb,CAAC;AAACE,EAAA,GA1CIjB,aAAa;AA4CnBA,aAAa,CAACkB,SAAS,GAAG;EACtBjB,QAAQ,EAAER,SAAS,CAAC0B,IAAI;EACxBjB,aAAa,EAAET,SAAS,CAAC2B,MAAM,CAACC,UAAU;EAC1ClB,cAAc,EAAEV,SAAS,CAAC2B;AAC9B,CAAC;AAEDpB,aAAa,CAACsB,YAAY,GAAG;EACzBrB,QAAQ,EAAE;AACd,CAAC;AAED,eAAeD,aAAa;AAAC,IAAAiB,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}